// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../holders.db"
  // url      = env("DATABASE_URL")
}

model Blocks {
  id            String   @id @default(cuid())
  projectId     String   @default("")
  firstBlock    Int      @default(0) // Project creation block
  previousBlock Int? // Previous block we left on
  lastBlock     Int      @default(0) // Latest network block
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Transfers {
  id          String    @id @default(cuid())
  projectId   String    @default("")
  amount      Float     @default(0)
  type        Int // -1 - burn, 0 - sell, 1 - buy, 2 - transfer
  address     String    @default("")
  fromAddress String    @default("")
  toAddress   String    @default("")
  hash        String    @default("")
  block       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Holders     Holders[]

  @@index([projectId])
  @@index([address])
  @@index([type])
  @@index([createdAt])
}

model Projects {
  id              String    @id @default(cuid())
  slug            String    @default("")
  projectId       String    @default("")
  contractAddress String    @default("")
  rpc             String    @default("")
  enabled         Boolean   @default(false)
  isRebasing      Boolean   @default(false)
  trackHolders    Boolean   @default(false)
  initialized     Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  Holders         Holders[]
}

model Holders {
  id          String      @id @default(cuid())
  projectId   String      @default("")
  address     String      @default("")
  balance     Float       @default(0)
  note        String      @default("")
  isContract  Boolean     @default(false)
  // projects    Projects?  @relation(fields: [projectsId], references: [id])
  projects    Projects[]
  projectsId  String?
  // transfers   Transfers? @relation(fields: [transfersId], references: [id])
  transfers   Transfers[]
  transfersId String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([projectId])
  @@index([address])
  @@index([transfersId])
  @@index([createdAt])
}
