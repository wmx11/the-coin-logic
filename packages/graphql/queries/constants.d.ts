export declare const GET_ENABLED_PROJECTS = "\n{\n  projects(\n    where: {\n      enabled: { equals: true }\n      OR: [\n        { trackData: { equals: true } }\n        { trackPrice: { equals: true }, trackMarketCap: { equals: true } }\n      ]\n    }\n  ) {\n    id\n    name\n    contractAddress\n    pairAddress\n    burnAddress\n    trackHoldersFromTokenAmount\n    useDexScreener\n    twitter\n    telegram\n    discord\n    discordServerId\n    trackData\n    trackPrice\n    trackMarketCap\n    isNft\n    liquidityPair {\n      address\n      useDexScreener\n      isPrimary\n      order\n      network {\n        slug\n      }\n      stablePair {\n        address\n        pairToken {\n          address\n          order\n        }\n      }\n    }\n    network {\n      url\n      slug\n    }\n    customTrackers(where: { enabled: { equals: true } }) {\n      id\n      label\n      description\n      address\n      pairAddress\n      getBalanceOf\n      decimals\n      enabled\n      useDexScreener\n      isCurrency\n      applyProjectNativeTokenPrice\n      method\n      network {\n        slug\n        url\n      }\n    }\n  }\n}";
export declare const GET_ENABLED_PROJECTS_FOR_HOLDERS_TRACKING: string;
export declare const GET_ENABLED_AND_NOT_INITIALIZED_PROJECTS_FOR_HOLDERS_TRACKING: string;
export declare const GET_HOLDERS_DATA_BY_PROJECT_ID = "\nquery($id: ID) {\n  marketStats(\n    take: 1\n    orderBy: { dateAdded: desc }\n    where: { project: { id: { equals: $id } } }\n  ) {\n    holders\n    avgHoldings\n    newHolders\n    recurringHolders\n    leavingHolders\n  }\n}";
export declare const GET_NETWORK_BY_SLUG = "\nquery($slug: String) {\n  networks(where: { slug: { equals: $slug } }) {\n    slug\n    url\n  }\n}";
//# sourceMappingURL=constants.d.ts.map